
<div class="container">
<%= form_for @experience, html: {multipart: true, class: "directUpload" } do |f| %>
  <!-- <% flash[:alert] = @experience.errors.full_messages if @experience.errors.any?%> -->
<% @experience.errors.count > 3 ? flash[:alert] = "Please fill out all the required fields." : flash[:alert] = @experience.errors.full_messages %>

  <div class="row">
    <div class="col-md-6">

      <div class="field">
        <label for="experience_title">* Title</label><br>
        <%= f.text_field :title, placeholder: "eg. Ameristralian Brunch", required: false, class: 'form-control', style: 'width: 75%' %>
      </div>
      <div class="field">
        <label for="experience_description">* Description</label>
        <%= f.text_area :description, placeholder: "Let people know what it's about", required: false, class: 'form-control', rows: '3', style: 'width: 75%' %>
      </div>

      <div class="field">
        <label for="experience_cuisine">* Cuisine</label>
        <%= f.text_field :cuisine, class: 'form-control', style: 'width: 75%' %>
      </div>
      <div class="field">
        <%= f.label :beverages %><br>
        <%= f.text_field :beverages, class: 'form-control', style: 'width: 75%' %>
      </div>
     <!--  <div class="field">
        <label for="exprience_max_group_size">* Max Group Size</label>
        <small>(Don't want a hundred guests now do we?)</small><br>
        <%= f.select :max_group_size, options_for_select(1..10, @experience.max_group_size), {},
          {required:true, class:'form-control', style:'width:20%'} %>
      </div> -->
      <%= f.hidden_field :max_group_size, value: @host.max_group_size %>
      <div class="field">
        <%= f.label :host_style %><br>
        <%= f.text_area :host_style, placeholder: "Do you cook in front of them? Eat with them?", class: 'form-control', style: 'width: 74%' %>
      </div>
      </br>
    </div>

    <div class="col-md-6">

    <%= f.label :date %><p><small> Filling in this field will create a 'Host Party', which is a single date event suitable for celebrations such as Christmas. By leaving it empty, the event will be open and you can choose to accept or reject a date suggested by users.</small></p>
      <div class="field form-inline">
        <%= f.date_select :date,
        {include_blank:true, use_short_month:true, order:[:month, :day, :year],
        start_year: Date.today.year, end_year: Date.today.year.next},
        {class:"form-control"} %>
      </div> 

      <!-- <div class="field form-inline">
        <label for="experience_available_days">Days Available</label>
        <small>(Check at least one)</small><br>
        <%= f.hidden_field :available_days%>
        <%= f.fields_for :days do |d| %>
          <% [:sun, :mon, :tue, :wed, :thu, :fri, :sat].each_with_index do |w, i| %>
            <%= d.check_box i.to_s, @experience.available_days[i] != "-" ? {checked: true, class:"form-control"} : {checked: false, class:""} %> <%= f.label w, class:"" %> &nbsp;
            <% if i == 3 %>
              <div class="visible-xs-inline"><br></div>
            <% end %>
          <% end %>
        <% end %>
      </div> -->

      <div class="field" id="meal">
        <%= f.label :meal %> <br>
        <%= f.select(:meal, options_for_select(Experience.get_meals,
              @experience.meal), {},
              {required: true, class: 'form-control', style:"width:50%"}) %>
      </div>

      <div class="field" id='dinner_choice'>
        <%= f.label :mealset %> <br>
        <%= f.select(:mealset, options_for_select(Experience.get_mealsets,
              @experience.mealset), {},
              {required: false, class: 'form-control', style:'width:50%'}) %>
      </div>
      <!-- <div class="field form-inline">
        <%= f.label :time, value: 'Preferred Time' %><br>
        <%= f.time_select :time, {minute_step: 15, ampm: true, default:{hour:00,min:00}}, class:"form-control", style:"min-height:30px; min-width:80px; width:15%" %>
      </div> -->

      <!-- <div class="field">
        <%= f.label :"Duration (hours)" %>
        <%= f.text_field :duration, placeholder: "Estimate", required: false, class: 'form-control', style: "width:75%" %>
      </div> -->

      <div class="field">
        <%= f.label :region %> <br>
        <%= f.select(:location, options_for_select(Experience.get_all_location, current_host.state), {}, {required: false, class: 'form-control', style:"width:50%"}) %>
      </div>

      <div class="field">
   <!--      <label for="experience_price">*Price (USD)</label>
        <form class="form-inline">
          <div class="form-group">
              <div class="input-group">
                <div class="input-group-addon">$</div> -->
                  <%= f.hidden_field :price %>
                <!--  <%= f.number_field :price, min: 0, required: false, title: "Feeling generous are we?", class: "form-control", style: "width: 74%"%> -->
              <!-- </div>
            </div> -->
      </div>

      <!-- <div class="field">
        <%= f.label :image %></br>
        <small>Please upload 3 images with aspect ratio of close to 1:1 (i.e. square) and resolution of atleast 600*600 for optimal results.</small>
        <br>
        <%= f.file_field(:images_array, multiple: true) %>
        <small><kbd>ctrl + click</kbd> to select multiple images.</small>
      </div> -->

      <div class="field">
        <%= f.label :image %><br>
        <small>Please upload 3 images with aspect ratio of close to 1:1 (i.e. square) and resolution of atleast 600*600 for optimal results.</small>
        <br>
        <div class="input-group">
          <span class="input-group-btn">
            <span class="btn btn-default upload-experience btn-file">
              Browse<%= f.file_field(:images_array, multiple: true) %>
            </span>
          </span>
          <input type="text" id="showfilename" class="form-control" placeholder="" readonly>
        </div>
        <small><kbd>ctrl + click</kbd> to select multiple images.</small>
      </div>

      <div class="actions">
        <%= f.submit "Create new experience", class: 'btn ', style: "color: #fff; text-transform: uppercase;font-size: 15px;  background:#66a422 !important; padding:10px", remote: true ,id: "test" %>
      </div>

    </div>
  </div>
<% end %>
</div>

<script type="text/javascript">

  $(function(){
    if( window.location.pathname.includes('edit') ){
      $('#showfilename').val('Browse to replace current experience images').attr('style','color:red');
      $('input[type*=submit]').val('Update Experience')
    }
  })
</script>
<script>
  $('.directUpload').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    var fd = <%= @s3_direct_post.fields.to_json.html_safe %>
   
    fileInput.after(barContainer);
    fileInput.fileupload({
      add: function (e, data) {
            fd["Content-Type"] = data.files[0].type;  
            data.formData = fd;
             data.submit();
           },  
      fileInput:       fileInput,
      url:             'https://s3-ap-southeast-1.amazonaws.com/mtdimagesdev/',
      type:            'POST',
      autoUpload:       true,
      formData:         fd,
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = 'https://s3-ap-southeast-1.amazonaws.com/mtdimagesdev/' + key;
   
        
        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })

        form.append(input);
 

      },
      
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });

</script>
